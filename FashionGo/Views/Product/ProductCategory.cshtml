@model PagedList.IPagedList<FashionGo.Models.Entities.Product>
@using FashionGo.Models.Entities
@using System.Web.Configuration
@using PagedList.Mvc;

@{
    ProductCategory category = ViewBag.Category;
    ViewBag.Title = Html.Raw(string.IsNullOrEmpty(category.MetaTitle) ? category.Name : category.MetaTitle);
    Layout = "~/Views/Shared/_Layout.cshtml";
    var rd = new Random();
}

@section HeaderMetas
{
    <meta name="description" content="@Html.Raw(category.MetaDescription)" />
    <meta name="keywords" content="@Html.Raw(category.MetaKeyword)" />
    <meta name="author" content="FashionGo.vn" />
    <meta property="og:url" content="@Request.Url" />
    <meta property="og:type" content="Product" />
    <meta property="og:title" content="@Html.Raw(category.MetaTitle)" />
    <meta property="og:description" content="@Html.Raw(category.MetaDescription)" />

    @if (!string.IsNullOrEmpty(category.Banner))
    {
        <meta property="og:image" content="@category.Banner.ResolveServerUrl()" />
    }
}

<style>
    .sale-flash {
        position: absolute;
        top: 10px;
        left: 10px;
        padding: 6px 10px;
        background-color: #ee4d2d;
        color: #FFF;
        text-shadow: 1px 1px 1px rgba(0,0,0,0.2);
        border-radius: 2px;
        z-index: 5;
    }

        .sale-flash.out-of-stock {
            background-color: #777;
        }

    .img-custom {
        height: 220px;
    }

    .sign {
        position: fixed;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999999;
        display: none;
    }

    .sign-content {
        border-radius: 10px;
        background-color: #fff;
        margin: 8% auto;
        font-size: 15px;
        max-height: 80vh;
        max-width: 150vh;
    }

    .sign-list {
        margin: 16px;
    }

    .span7 #main-image-area {
        float: left;
        width: 350px;
    }

    .selected {
        background-color: #f2533d;
        color: #fff;
    }
</style>

@if (!string.IsNullOrEmpty(category.Banner))
{
    <!-- top-banner -->
    <div class="t3-sl top-banner">
        <!-- SPOTLIGHT -->
        <div class="t3-spotlight t3-top-banner  row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="t3-module module " id="Mod140">
                    <div class="module-inner">
                        <div class="module-ct">
                            <div class="custom">
                                <p>
                                    <img src="@category.Banner" alt="@category.Name" />
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- SPOTLIGHT -->
    </div>
    <!-- //top-banner -->
}
<!-- //top-banner -->
<div class="wrap-content">
    <div id="system-message-container">
    </div>
    <script src="~/Scripts/components/com_eshop/assets/js/jquery.cookie.js" type="text/javascript"></script>
    <script src="~/Scripts/components/com_eshop/assets/js/layout.js" type="text/javascript"></script>
    <script>
        jQuery(function ($) {
            $(document).ready(function () {
                changeLayout('grid');
            });
        });
    </script>
    <h2 style="color: orangered; text-transform: none; font-family: Arial; font-weight: 100; font-size:25px;"><i class="fa-solid fa-ruler-vertical"></i>  @ViewBag.Category.Name</h2>
    <div class="eshop-products-list">
        <div id="products-list-container" class="products-list-container block grid">
            <div class="sortPagiBar row-fluid clearfix">
                <div class="span3">
                    <div class="btn-group hidden-phone">
                        <a rel="grid" href="#" class="btn grid"><i class="icon-th-large"></i></a>
                        <a rel="list" href="#" class="btn list"><i class="icon-th-list"></i></a>
                    </div>
                </div>
                @using (Html.BeginForm("ProductCategory", "Product", FormMethod.Get))
                {
                    <input name="a" id="id" type="hidden" value="@ViewBag.CateId" />
                    <div class="clearfix">
                        <div class="eshop-product-show">
                            <b style="text-transform: none; font-family: Arial; font-weight: 100;">Xem: </b>
                            <select id="limit" name="limit" class="inputbox input-mini" size="1" onchange="this.form.submit()" autocomplete="off">
                                @if (ViewBag.CurrentFilters != null)
                                {
                                    <option value="@ViewBag.CurrentFilters" selected>Đang chọn @ViewBag.CurrentFilters </option>
                                }
                                <option value="10">10</option>
                                <option value="30">30</option>
                                <option value="45">45</option>
                                <option value="90">90</option>
                                <option value="@Model.Count()">Xem tất cả</option>
                            </select>
                        </div>
                        <div class="eshop-product-sorting">
                            <b style="text-transform: none; font-family: Arial; font-weight: 100;">Sắp xếp theo: </b>
                            @Html.DropDownList("sort_options", new SelectList(
                                      new List<Object>{
                                    new { value = "product_name-ASC", text = "Tên sản phẩm (A - Z)" },
                                    new { value = "product_name-DESC", text = "Tên sản phẩm (Z - A)" },
                                    new { value = "product_price-ASC", text = "Giá tăng dần" },
                                    new { value = "product_price-DESC", text = "Giá giảm dần" }
                                             }, "value", "text", ViewBag.CurrentSort),
                                      new { @class = "inputbox input-xlarge", onchange = "this.form.submit();" })
                        </div>
                    </div>

                }
                @* <div class="span9">
                        <form method="post" name="adminForm" id="adminForm" action="">
                            <div class="clearfix">
                                <div class="eshop-product-show">
                                    <b style="text-transform: none; font-family: Arial; font-weight: 100;">Xem: </b>
                                    <select id="limit" name="limit" class="inputbox input-mini" size="1" onchange="this.form.submit()" autocomplete="off">
                                        <option value="15" selected="selected">15</option>
                                        <option value="30">30</option>
                                        <option value="45">45</option>
                                        <option value="90">90</option>
                                        <option value="0">Xem tất cả</option>
                                    </select>
                                </div>
                                <div class="eshop-product-sorting">
                                    <b style="text-transform: none; font-family: Arial; font-weight: 100;">Sắp xếp theo: </b>
                                    <select id="sort_options" name="sort_options" class="inputbox input-xlarge" onchange="this.form.submit();" autocomplete="off">
                                        <option value="b.product_name-ASC" selected="selected"style="text-transform: none; font-family: Arial; font-weight: 100;">Tên sản phẩm (A - Z)</option>
                                        <option value="b.product_name-DESC"style="text-transform: none; font-family: Arial; font-weight: 100;">Tên sản phẩm (Z- A)</option>
                                        <option value="a.product_price-ASC"style="text-transform: none; font-family: Arial; font-weight: 100;">Giá tăng dần</option>
                                        <option value="a.product_price-DESC"style="text-transform: none; font-family: Arial; font-weight: 100;">Giá giảm dần</option>
                                    </select>
                                </div>
                            </div>
                        </form>
                    </div>*@
            </div>
            <div id="products-list" class="row-fluid clearfix">
                @{
                    var clearfixDivStart = "<div class='clearfix'>";
                    var clearfixDivEnd = "</div>";
                    var stt = 1;
                }
                @foreach (var item in Model)
                {
                    if (stt % 3 == 1)
                    {
                        @Html.Raw(clearfixDivStart)
                    }

                    <div class="span4 ajax-block-product spanbox clearfix">
                        <div class="row">
                            <div class="eshop-wrap-image col-md-4">
                                <div class="eshop-image-block">
                                    <div class="image">
                                        <a href="@Url.RouteUrl("ProductDetails", new { slug = item.Name.ToAscii(), id = item.Id })" title="@item.Name" class="product-image">
                                            <img id="product-image-@item.Id" style="width: 100%" src="@item.FeaturedImage" title="@item.Name" alt="@item.Name">
                                        </a>
                                        <span class="overlay-background-color">&nbsp;</span>
                                    </div>

                                    <div class="eshop-buttons">
                                        <p>
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <a class="button" style="cursor: pointer;" onclick="toggleColor(this)" title="Đánh dấu sản phẩm yêu thích"><i class="fa fa-heart"></i><span class="text-hide">Yêu thích</span></a>
                                            }
                                            else
                                            {
                                                <a class="button" style="cursor: pointer;" onclick="alert('Bạn cần đăng nhập')" title="Đánh dấu sản phẩm yêu thích"><i class="fa fa-heart"></i><span class="text-hide">Yêu thích</span></a>
                                            }
                                            <a class="button" style="cursor: pointer;" href="@Url.RouteUrl("ProductDetails", new { slug = item.Name.ToAscii(), id = item.Id })" title="Xem chi tiết"><i class="fa fa-arrow-right"></i><span class="text-hide">Chi tiết</span></a>
                                        </p>

                                        <div class="eshop-cart-area">
                                            <button onclick="loadForm('@item.Id')" class="btn btn-primary">Thêm vào giỏ</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="eshop-info col-md-8">
                                <div class="eshop-info-block">
                                    <h4 class="eshop-product-title" style="font-family:Arial; text-transform:none;">
                                        <a href="@Url.RouteUrl("ProductDetails", new { slug = item.Name.ToAscii(), id = item.Id })" title="@item.Name">@item.Name</a>
                                    </h4>
                                    <div class="eshop-product-desc">
                                        @item.Description
                                    </div>
                                    <div class="row eshop-table">
                                        <div class="eshop-product-review col-xs-6 col-sm-6">
                                            <span itemprop="review" itemscope="" itemtype="http://schema.org/Review-aggregate">
                                                <i class="fa fa-tag" aria-hidden="true"></i>@rd.Next(10)
                                                <i class="fa fa-eye" aria-hidden="true"></i>@item.Views
                                                @*<span itemprop="rating"><img src="/fashionpro/components/com_eshop/themes/fashionpro/images/stars-0.png"></span>*@
                                            </span>
                                        </div>
                                        <div class="eshop-product-price col-xs-6 col-sm-6">
                                            <p>
                                                @if (item.Discount.Value > 0)
                                                {
                                                    <span class="eshop-base-price" style="font-family:Arial;">@Html.FormatValue(item.Price, "{0:0,0}")đ</span>
                                                }
                                                <span class="eshop-sale-price" style="font-family:Arial;">@Html.FormatValue(item.PriceAfter, "{0:0,0}")đ</span>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="eshop-buttons">
                                        <div class="eshop-cart-area">
                                            <div class="input-append input-prepend input-group bootstrap-touchspin">
                                                <span class="eshop-quantity">
                                                    <input type="text" class="eshop-quantity-value" id="quantity_@item.Id" name="quantity" value="1">
                                                    <span class="input-group-btn-vertical">
                                                        <a class="btn btn-default button-plus" id="@item.Id" data="up"><i class="icon-chevron-up"></i></a>
                                                        <a class="btn btn-default button-minus" id="@item.Id" data="down"><i class="icon-chevron-down"></i></a>
                                                    </span>
                                                </span>
                                            </div>
                                            <button id="add-to-cart-@item.Id" class="btn btn-primary" onclick="addToCart(@item.Id, 1, '@WebConfigurationManager.AppSettings["SiteName"].ToString()');" value="Thêm vào giỏ">
                                                <i class="fa fa-shopping-cart">&nbsp;</i>&nbsp;Thêm vào giỏ
                                            </button>
                                        </div>
                                        <p>
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <a class="btn button" style="cursor: pointer;" onclick="addToWishList2(this,@item.Id, '@WebConfigurationManager.AppSettings["SiteName"].ToString()')" title="Đánh dấu sản phẩm yêu thích"><i class="fa fa-heart"></i>Đánh dấu Yêu thích</a>
                                            }
                                            else
                                            {
                                                <a class="btn button" style="cursor: pointer;" onclick="alert('Bạn cần đăng nhập')" title="Đánh dấu sản phẩm yêu thích"><i class="fa fa-heart"></i>Đánh dấu Yêu thích</a>
                                            }
                                            <a class="btn button" style="cursor: pointer;" href="@Url.RouteUrl("ProductDetails", new { slug = item.Name.ToAscii(), id = item.Id })" title="Xem chi tiết">Chi tiết <i class="fa fa-arrow-right"></i></a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    if (stt % 3 == 0 || stt == Model.Count())
                    {
                        @Html.Raw(clearfixDivEnd)
                    }
                    stt++;

                }
                <div class="row-fluid">
                    <div class="pagination">
                        @Html.PagedListPager(Model, page => Url.HttpRouteUrl("ProductCategory", new { slug = category.Slug, id = category.CatId, page = page }))
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="sign" id="sign">

</div>

<script>
    function toggleColor(element) {
        if (element.style.color !== 'red') {
            element.style.color = 'red';
        } else {
            element.style.color = '';
        }
    }
</script>
<script>

    function loadForm(id) {
        debugger
        jQuery.ajax({
            url: '/Product/BlokAdd',
            type: 'GET',
            data: { Id: id },
            success: function (result) {
                debugger
                document.getElementById('sign').innerHTML = result;
                document.getElementById('sign').style.display = 'block';
            }
        });
    }
    function addToWishList2(ele, itemId) {
        var heartIcon = document.getElementById("icon_heart");
        if (heartIcon.classList.contains("red")) {
            heartIcon.classList.remove("red"); // Loại bỏ class "red" để trở về trạng thái mặc định
        } else {
            heartIcon.classList.add("red"); // Thêm class "red" để đổi màu trái tim thành đỏ
        }
        jQuery.ajax({
            type: "POST", // Hoặc "GET" nếu bạn muốn sử dụng GET request
            url: "/Product/AddToWishList", // Thay thế "ControllerName" và "ActionName" bằng tên controller và action cụ thể
            data: { id: itemId },
            success: function (response) {
                // Xử lý kết quả trả về sau khi gọi controller thành công
            },
            error: function () {
                // Xử lý lỗi (nếu có)
            }
        });
    }
    function addToWishList(itemId) {
        var heartIcon = document.getElementById("icon_heart_" + itemId);
        if (heartIcon.style.color === "red") {
            heartIcon.style.color = ""; // Xóa thuộc tính màu để trở về màu mặc định
        } else {
            heartIcon.style.color = "red";
        }

        jQuery.ajax({
            type: "POST", // Hoặc "GET" nếu bạn muốn sử dụng GET request
            url: "/Product/AddToWishList", // Thay thế "ControllerName" và "ActionName" bằng tên controller và action cụ thể
            data: { id: itemId },
            success: function (response) {
                // Xử lý kết quả trả về sau khi gọi controller thành công
            },
            error: function () {
                // Xử lý lỗi (nếu có)
            }
        });
    }

    function toggleColorButton(button) {
        var colorButtons = document.getElementsByClassName("colorButton");
        for (var i = 0; i < colorButtons.length; i++) {
            colorButtons[i].classList.remove("selected");
        }
        button.classList.add("selected");
        selectedColor = button.getAttribute("data-color"); // Loại bỏ từ khóa "var" ở đây
    }

    function toggleSizeButton(button) {
        var sizeButtons = document.getElementsByClassName("sizeButton");
        for (var i = 0; i < sizeButtons.length; i++) {
            sizeButtons[i].classList.remove("selected");
        }
        button.classList.add("selected");
        selectedSize = button.getAttribute("data-size"); // Loại bỏ từ khóa "var" ở đây
    }
    console.log(selectedColor);
    console.log(selectedSize);

</script>
<script>
    // Đảm bảo jQuery đã được tải và sẵn sàng sử dụng
    $(document).ready(function () {
        // Gắn sự kiện 'change' cho các dropdown menu
        $('#limit, #sort_options').change(function () {
            // Lấy dữ liệu từ form
            var formData = {
                limit: $('#limit').val(),
                sortOption: $('#sort_options').val()
                id: @ViewBag.CateId
            };

            // Gửi dữ liệu đến server sử dụng AJAX
            $.ajax({
                url: '/Product/SortAndFilter', // Thay thế 'ControllerName' và 'ActionName' bằng tên thực tế của bạn
                type: 'POST',
                data: formData,
                success: function (data) {
                    // Cập nhật nội dung của trang với dữ liệu mới
                    $('#products-list-container').html(data);
                }
            });
        });
    });



// Hàm changeLayout được định nghĩa trong file layout.js
// Đảm bảo rằng file layout.js đã được tải và có hàm changeLayout

</script>